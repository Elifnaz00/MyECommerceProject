@model ProductDetailViewModel
@using Microsoft.AspNetCore.Http
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = "ProductDetails";
    Layout = "~/Views/Shared/Layout.cshtml";

}

<head>
    <link rel="stylesheet" href="~/Themes/shionhouse-master/assets/css/product-detail.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css">
</head>

<div style="height: 100px"></div>

<div class="container mt-5">
    <div class="row">
        <!-- Product Images -->
        <div class="col-md-6 mb-4">
            <img src="@Model.ImageUrl" alt="Product" class="img-fluid rounded mb-3 product-image" id="mainImage">
            <div class="d-flex justify-content-between">
                <img src="https://images.unsplash.com/photo-1505740420928-5e560c06d30e?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=M3w0NzEyNjZ8MHwxfHNlYXJjaHwxfHxoZWFkcGhvbmV8ZW58MHwwfHx8MTcyMTMwMzY5MHww&ixlib=rb-4.0.3&q=80&w=1080"
                     alt="Thumbnail 1" class="thumbnail rounded active" onclick="changeImage(event, this.src)">
                <img src="https://images.unsplash.com/photo-1528148343865-51218c4a13e6?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=M3w0NzEyNjZ8MHwxfHNlYXJjaHwzfHxoZWFkcGhvbmV8ZW58MHwwfHx8MTcyMTMwMzY5MHww&ixlib=rb-4.0.3&q=80&w=1080"
                     alt="Thumbnail 2" class="thumbnail rounded" onclick="changeImage(event, this.src)">
                <img src="https://images.unsplash.com/photo-1505740420928-5e560c06d30e?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=M3w0NzEyNjZ8MHwxfHNlYXJjaHwxfHxoZWFkcGhvbmV8ZW58MHwwfHx8MTcyMTMwMzY5MHww&ixlib=rb-4.0.3&q=80&w=1080"
                     alt="Thumbnail 3" class="thumbnail rounded" onclick="changeImage(event, this.src)">
            </div>
        </div>

        <!-- Product Details -->
        <div class="col-md-6 product-details">
            <h2 class="mb-3">@Model.Title</h2>
            <div class="mb-3">
                <span class="h4 me-2">@($"{Model.Price.ToString("N2", new System.Globalization.CultureInfo("tr-TR"))} TL")</span>
            </div>

            <div class="mb-3">
                <i class="bi bi-star-fill text-warning"></i>
                <i class="bi bi-star-fill text-warning"></i>
                <i class="bi bi-star-fill text-warning"></i>
                <i class="bi bi-star-fill text-warning"></i>
                <i class="bi bi-star-half text-warning"></i>
                <span class="ms-2">4.5 (120 Beğeni)</span>
            </div>

            <div style="height: 20px"></div>

            <p class="mb-4">@Model.Description</p>

            <div class="mb-4">
                <input id="product-id" type="hidden" class="form-control" value="@Model.Id" name="ProductId" />
                <input type="hidden" class="form-control" value="@Model.Price" name="Price" />
                <input type="hidden" class="form-control" value="@Model.ImageUrl" name="ImageUrl" />
                <input type="hidden" class="form-control" value="@Model.Title" name="Title" />
            </div>

            <button class="btn btn-outline-secondary add-to-cart-btn btn-lg mb-3" type="submit">
                <i class="bi bi-heart"></i> Sepete Ekle
            </button>
        </div>
    </div>
</div>

@await Component.InvokeAsync("SimilarProducts", Model.CategoryId)

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    $(document).ready(function () {
        $(".add-to-cart-btn").on("click", function () {
            var productId = $(this).closest(".product-details").find("#product-id").val();
            var isAuthenticated = '@User.Identity.IsAuthenticated'.toLowerCase() === 'true';
            var token = @Html.Raw(Json.Serialize(Context.Session.GetString("token") ?? ""))

            if (!isAuthenticated) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Giriş Yapmalısınız!',
                    text: 'Sepete ürün eklemek için lütfen giriş yapınız.',
                    confirmButtonText: 'Giriş Yap',
                    showCancelButton: true,
                    cancelButtonText: 'İptal'
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = '/Login/Index';
                    }
                });
            } else {
                $.ajax({
                    type: "POST",
                    url: "https://localhost:7177/api/v1/BasketItem/AddToBasket/",
                    data: JSON.stringify({ productId: productId }),
                    dataType: "json",
                    contentType: 'application/json; charset=utf-8',
                    beforeSend: function (xhr) {
                        if (token) {
                            xhr.setRequestHeader("Authorization", "Bearer " + token);
                        }
                    }
                })
                .done(function (data) {
                    Swal.fire({
                        icon: 'success',
                        title: '1 ürün sepete eklendi!',
                        text: data.message,
                        confirmButtonText: 'Sepete Git',
                        showCancelButton: true,
                        cancelButtonText: 'Tamam'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.href = '/ShoppingCart/Index';
                        }
                    });
                })
                .fail(function (response) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Hata!',
                        text: response.message
                    });
                });
            }
        });
    });

    function changeImage(event, src) {
        document.getElementById('mainImage').src = src;
        document.querySelectorAll('.thumbnail').forEach(thumb => thumb.classList.remove('active'));
        event.target.classList.add('active');
    }
</script>
